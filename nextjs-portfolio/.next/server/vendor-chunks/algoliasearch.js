"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/algoliasearch";
exports.ids = ["vendor-chunks/algoliasearch"];
exports.modules = {

/***/ "(ssr)/../node_modules/algoliasearch/dist/node.js":
/*!**************************************************!*\
  !*** ../node_modules/algoliasearch/dist/node.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   algoliasearch: () => (/* binding */ algoliasearch),\n/* harmony export */   apiClientVersion: () => (/* reexport safe */ _algolia_client_search__WEBPACK_IMPORTED_MODULE_0__.apiClientVersion)\n/* harmony export */ });\n/* harmony import */ var _algolia_client_abtesting__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @algolia/client-abtesting */ \"(ssr)/../node_modules/@algolia/client-abtesting/dist/builds/node.js\");\n/* harmony import */ var _algolia_client_analytics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @algolia/client-analytics */ \"(ssr)/../node_modules/@algolia/client-analytics/dist/builds/node.js\");\n/* harmony import */ var _algolia_client_insights__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @algolia/client-insights */ \"(ssr)/../node_modules/@algolia/client-insights/dist/builds/node.js\");\n/* harmony import */ var _algolia_client_personalization__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @algolia/client-personalization */ \"(ssr)/../node_modules/@algolia/client-personalization/dist/builds/node.js\");\n/* harmony import */ var _algolia_client_query_suggestions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @algolia/client-query-suggestions */ \"(ssr)/../node_modules/@algolia/client-query-suggestions/dist/builds/node.js\");\n/* harmony import */ var _algolia_client_search__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @algolia/client-search */ \"(ssr)/../node_modules/@algolia/client-search/dist/builds/node.js\");\n/* harmony import */ var _algolia_ingestion__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @algolia/ingestion */ \"(ssr)/../node_modules/@algolia/ingestion/dist/builds/node.js\");\n/* harmony import */ var _algolia_monitoring__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @algolia/monitoring */ \"(ssr)/../node_modules/@algolia/monitoring/dist/builds/node.js\");\n/* harmony import */ var _algolia_recommend__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @algolia/recommend */ \"(ssr)/../node_modules/@algolia/recommend/dist/builds/node.js\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\n\n// builds/node.ts\nvar node_exports = {};\n__export(node_exports, {\n  algoliasearch: () => algoliasearch,\n  apiClientVersion: () => _algolia_client_search__WEBPACK_IMPORTED_MODULE_0__.apiClientVersion\n});\n\n\n\n\n\n\n\n\n\n\n// builds/models.ts\nvar models_exports = {};\n__export(models_exports, {\n  apiClientVersion: () => _algolia_client_search__WEBPACK_IMPORTED_MODULE_0__.apiClientVersion\n});\n__reExport(models_exports, _algolia_client_abtesting__WEBPACK_IMPORTED_MODULE_1__);\n__reExport(models_exports, _algolia_client_analytics__WEBPACK_IMPORTED_MODULE_2__);\n__reExport(models_exports, _algolia_client_insights__WEBPACK_IMPORTED_MODULE_3__);\n__reExport(models_exports, _algolia_client_personalization__WEBPACK_IMPORTED_MODULE_4__);\n__reExport(models_exports, _algolia_client_query_suggestions__WEBPACK_IMPORTED_MODULE_5__);\n__reExport(models_exports, _algolia_client_search__WEBPACK_IMPORTED_MODULE_0__);\n__reExport(models_exports, _algolia_ingestion__WEBPACK_IMPORTED_MODULE_6__);\n__reExport(models_exports, _algolia_monitoring__WEBPACK_IMPORTED_MODULE_7__);\n__reExport(models_exports, _algolia_recommend__WEBPACK_IMPORTED_MODULE_8__);\n\n\n\n\n\n\n\n\n\n\n\n// builds/node.ts\n__reExport(node_exports, models_exports);\nfunction algoliasearch(appId, apiKey, options) {\n  if (!appId || typeof appId !== \"string\") {\n    throw new Error(\"`appId` is missing.\");\n  }\n  if (!apiKey || typeof apiKey !== \"string\") {\n    throw new Error(\"`apiKey` is missing.\");\n  }\n  const client = (0,_algolia_client_search__WEBPACK_IMPORTED_MODULE_0__.searchClient)(appId, apiKey, options);\n  let ingestionTransporter;\n  if (options == null ? void 0 : options.transformation) {\n    if (!options.transformation.region) {\n      throw new Error(\"`region` must be provided when leveraging the transformation pipeline\");\n    }\n    ingestionTransporter = (0,_algolia_ingestion__WEBPACK_IMPORTED_MODULE_6__.ingestionClient)(appId, apiKey, options.transformation.region, options);\n  }\n  return {\n    ...client,\n    async saveObjectsWithTransformation({ indexName, objects, waitForTasks }, requestOptions) {\n      var _a;\n      if (!ingestionTransporter) {\n        throw new Error(\"`transformation.region` must be provided at client instantiation before calling this method.\");\n      }\n      if (!((_a = options == null ? void 0 : options.transformation) == null ? void 0 : _a.region)) {\n        throw new Error(\"`region` must be provided when leveraging the transformation pipeline\");\n      }\n      return ingestionTransporter == null ? void 0 : ingestionTransporter.push(\n        {\n          indexName,\n          watch: waitForTasks,\n          pushTaskPayload: {\n            action: \"addObject\",\n            records: objects\n          }\n        },\n        requestOptions\n      );\n    },\n    async partialUpdateObjectsWithTransformation({ indexName, objects, createIfNotExists, waitForTasks }, requestOptions) {\n      var _a;\n      if (!ingestionTransporter) {\n        throw new Error(\"`transformation.region` must be provided at client instantiation before calling this method.\");\n      }\n      if (!((_a = options == null ? void 0 : options.transformation) == null ? void 0 : _a.region)) {\n        throw new Error(\"`region` must be provided when leveraging the transformation pipeline\");\n      }\n      return ingestionTransporter == null ? void 0 : ingestionTransporter.push(\n        {\n          indexName,\n          watch: waitForTasks,\n          pushTaskPayload: {\n            action: createIfNotExists ? \"partialUpdateObject\" : \"partialUpdateObjectNoCreate\",\n            records: objects\n          }\n        },\n        requestOptions\n      );\n    },\n    /**\n     * Get the value of the `algoliaAgent`, used by our libraries internally and telemetry system.\n     */\n    get _ua() {\n      return client.transporter.algoliaAgent.value;\n    },\n    initAbtesting: (initOptions) => {\n      return (0,_algolia_client_abtesting__WEBPACK_IMPORTED_MODULE_1__.abtestingClient)(\n        initOptions.appId || appId,\n        initOptions.apiKey || apiKey,\n        initOptions.region,\n        initOptions.options\n      );\n    },\n    initAnalytics: (initOptions) => {\n      return (0,_algolia_client_analytics__WEBPACK_IMPORTED_MODULE_2__.analyticsClient)(\n        initOptions.appId || appId,\n        initOptions.apiKey || apiKey,\n        initOptions.region,\n        initOptions.options\n      );\n    },\n    initIngestion: (initOptions) => {\n      return (0,_algolia_ingestion__WEBPACK_IMPORTED_MODULE_6__.ingestionClient)(\n        initOptions.appId || appId,\n        initOptions.apiKey || apiKey,\n        initOptions.region,\n        initOptions.options\n      );\n    },\n    initInsights: (initOptions) => {\n      return (0,_algolia_client_insights__WEBPACK_IMPORTED_MODULE_3__.insightsClient)(\n        initOptions.appId || appId,\n        initOptions.apiKey || apiKey,\n        initOptions.region,\n        initOptions.options\n      );\n    },\n    initMonitoring: (initOptions = {}) => {\n      return (0,_algolia_monitoring__WEBPACK_IMPORTED_MODULE_7__.monitoringClient)(initOptions.appId || appId, initOptions.apiKey || apiKey, initOptions.options);\n    },\n    initPersonalization: (initOptions) => {\n      return (0,_algolia_client_personalization__WEBPACK_IMPORTED_MODULE_4__.personalizationClient)(\n        initOptions.appId || appId,\n        initOptions.apiKey || apiKey,\n        initOptions.region,\n        initOptions.options\n      );\n    },\n    initQuerySuggestions: (initOptions) => {\n      return (0,_algolia_client_query_suggestions__WEBPACK_IMPORTED_MODULE_5__.querySuggestionsClient)(\n        initOptions.appId || appId,\n        initOptions.apiKey || apiKey,\n        initOptions.region,\n        initOptions.options\n      );\n    },\n    initRecommend: (initOptions = {}) => {\n      return (0,_algolia_recommend__WEBPACK_IMPORTED_MODULE_8__.recommendClient)(initOptions.appId || appId, initOptions.apiKey || apiKey, initOptions.options);\n    }\n  };\n}\n\n//# sourceMappingURL=node.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL2FsZ29saWFzZWFyY2gvZGlzdC9ub2RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLGtDQUFrQztBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLDRGQUE0RjtBQUN6SDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixvRUFBZ0I7QUFDMUMsQ0FBQztBQUMyRDtBQUNBO0FBQ0Y7QUFDYztBQUNHO0FBQ3JCO0FBQ0Q7QUFDRTtBQUNGOztBQUVyRDtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsb0VBQWdCO0FBQzFDLENBQUM7QUFDRCwyQkFBMkIsc0RBQXFCO0FBQ2hELDJCQUEyQixzREFBcUI7QUFDaEQsMkJBQTJCLHFEQUFvQjtBQUMvQywyQkFBMkIsNERBQTJCO0FBQ3RELDJCQUEyQiw4REFBNkI7QUFDeEQsMkJBQTJCLG1EQUFrQjtBQUM3QywyQkFBMkIsK0NBQWM7QUFDekMsMkJBQTJCLGdEQUFlO0FBQzFDLDJCQUEyQiwrQ0FBYztBQUNpQjtBQUNTO0FBQ0E7QUFDRjtBQUNjO0FBQ0k7QUFDdEI7QUFDUjtBQUNFO0FBQ0Y7O0FBRXJEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixvRUFBWTtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLG1FQUFlO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyxrQ0FBa0M7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsbURBQW1ELHFEQUFxRDtBQUN4RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsYUFBYSwwRUFBZTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsYUFBYSwwRUFBZTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsYUFBYSxtRUFBZTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsYUFBYSx3RUFBYztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLHFDQUFxQztBQUNyQyxhQUFhLHFFQUFnQjtBQUM3QixLQUFLO0FBQ0w7QUFDQSxhQUFhLHNGQUFxQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsYUFBYSx5RkFBc0I7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxvQ0FBb0M7QUFDcEMsYUFBYSxtRUFBZTtBQUM1QjtBQUNBO0FBQ0E7QUFJRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLXBvcnRmb2xpby8uLi9ub2RlX21vZHVsZXMvYWxnb2xpYXNlYXJjaC9kaXN0L25vZGUuanM/YjY4MyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19kZWZQcm9wID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIF9fZ2V0T3duUHJvcERlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xudmFyIF9fZ2V0T3duUHJvcE5hbWVzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXM7XG52YXIgX19oYXNPd25Qcm9wID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBfX2V4cG9ydCA9ICh0YXJnZXQsIGFsbCkgPT4ge1xuICBmb3IgKHZhciBuYW1lIGluIGFsbClcbiAgICBfX2RlZlByb3AodGFyZ2V0LCBuYW1lLCB7IGdldDogYWxsW25hbWVdLCBlbnVtZXJhYmxlOiB0cnVlIH0pO1xufTtcbnZhciBfX2NvcHlQcm9wcyA9ICh0bywgZnJvbSwgZXhjZXB0LCBkZXNjKSA9PiB7XG4gIGlmIChmcm9tICYmIHR5cGVvZiBmcm9tID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBmcm9tID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICBmb3IgKGxldCBrZXkgb2YgX19nZXRPd25Qcm9wTmFtZXMoZnJvbSkpXG4gICAgICBpZiAoIV9faGFzT3duUHJvcC5jYWxsKHRvLCBrZXkpICYmIGtleSAhPT0gZXhjZXB0KVxuICAgICAgICBfX2RlZlByb3AodG8sIGtleSwgeyBnZXQ6ICgpID0+IGZyb21ba2V5XSwgZW51bWVyYWJsZTogIShkZXNjID0gX19nZXRPd25Qcm9wRGVzYyhmcm9tLCBrZXkpKSB8fCBkZXNjLmVudW1lcmFibGUgfSk7XG4gIH1cbiAgcmV0dXJuIHRvO1xufTtcbnZhciBfX3JlRXhwb3J0ID0gKHRhcmdldCwgbW9kLCBzZWNvbmRUYXJnZXQpID0+IChfX2NvcHlQcm9wcyh0YXJnZXQsIG1vZCwgXCJkZWZhdWx0XCIpLCBzZWNvbmRUYXJnZXQgJiYgX19jb3B5UHJvcHMoc2Vjb25kVGFyZ2V0LCBtb2QsIFwiZGVmYXVsdFwiKSk7XG5cbi8vIGJ1aWxkcy9ub2RlLnRzXG52YXIgbm9kZV9leHBvcnRzID0ge307XG5fX2V4cG9ydChub2RlX2V4cG9ydHMsIHtcbiAgYWxnb2xpYXNlYXJjaDogKCkgPT4gYWxnb2xpYXNlYXJjaCxcbiAgYXBpQ2xpZW50VmVyc2lvbjogKCkgPT4gYXBpQ2xpZW50VmVyc2lvblxufSk7XG5pbXBvcnQgeyBhYnRlc3RpbmdDbGllbnQgfSBmcm9tIFwiQGFsZ29saWEvY2xpZW50LWFidGVzdGluZ1wiO1xuaW1wb3J0IHsgYW5hbHl0aWNzQ2xpZW50IH0gZnJvbSBcIkBhbGdvbGlhL2NsaWVudC1hbmFseXRpY3NcIjtcbmltcG9ydCB7IGluc2lnaHRzQ2xpZW50IH0gZnJvbSBcIkBhbGdvbGlhL2NsaWVudC1pbnNpZ2h0c1wiO1xuaW1wb3J0IHsgcGVyc29uYWxpemF0aW9uQ2xpZW50IH0gZnJvbSBcIkBhbGdvbGlhL2NsaWVudC1wZXJzb25hbGl6YXRpb25cIjtcbmltcG9ydCB7IHF1ZXJ5U3VnZ2VzdGlvbnNDbGllbnQgfSBmcm9tIFwiQGFsZ29saWEvY2xpZW50LXF1ZXJ5LXN1Z2dlc3Rpb25zXCI7XG5pbXBvcnQgeyBzZWFyY2hDbGllbnQgfSBmcm9tIFwiQGFsZ29saWEvY2xpZW50LXNlYXJjaFwiO1xuaW1wb3J0IHsgaW5nZXN0aW9uQ2xpZW50IH0gZnJvbSBcIkBhbGdvbGlhL2luZ2VzdGlvblwiO1xuaW1wb3J0IHsgbW9uaXRvcmluZ0NsaWVudCB9IGZyb20gXCJAYWxnb2xpYS9tb25pdG9yaW5nXCI7XG5pbXBvcnQgeyByZWNvbW1lbmRDbGllbnQgfSBmcm9tIFwiQGFsZ29saWEvcmVjb21tZW5kXCI7XG5cbi8vIGJ1aWxkcy9tb2RlbHMudHNcbnZhciBtb2RlbHNfZXhwb3J0cyA9IHt9O1xuX19leHBvcnQobW9kZWxzX2V4cG9ydHMsIHtcbiAgYXBpQ2xpZW50VmVyc2lvbjogKCkgPT4gYXBpQ2xpZW50VmVyc2lvblxufSk7XG5fX3JlRXhwb3J0KG1vZGVsc19leHBvcnRzLCBjbGllbnRfYWJ0ZXN0aW5nX3N0YXIpO1xuX19yZUV4cG9ydChtb2RlbHNfZXhwb3J0cywgY2xpZW50X2FuYWx5dGljc19zdGFyKTtcbl9fcmVFeHBvcnQobW9kZWxzX2V4cG9ydHMsIGNsaWVudF9pbnNpZ2h0c19zdGFyKTtcbl9fcmVFeHBvcnQobW9kZWxzX2V4cG9ydHMsIGNsaWVudF9wZXJzb25hbGl6YXRpb25fc3Rhcik7XG5fX3JlRXhwb3J0KG1vZGVsc19leHBvcnRzLCBjbGllbnRfcXVlcnlfc3VnZ2VzdGlvbnNfc3Rhcik7XG5fX3JlRXhwb3J0KG1vZGVsc19leHBvcnRzLCBjbGllbnRfc2VhcmNoX3N0YXIpO1xuX19yZUV4cG9ydChtb2RlbHNfZXhwb3J0cywgaW5nZXN0aW9uX3N0YXIpO1xuX19yZUV4cG9ydChtb2RlbHNfZXhwb3J0cywgbW9uaXRvcmluZ19zdGFyKTtcbl9fcmVFeHBvcnQobW9kZWxzX2V4cG9ydHMsIHJlY29tbWVuZF9zdGFyKTtcbmltcG9ydCB7IGFwaUNsaWVudFZlcnNpb24gfSBmcm9tIFwiQGFsZ29saWEvY2xpZW50LXNlYXJjaFwiO1xuaW1wb3J0ICogYXMgY2xpZW50X2FidGVzdGluZ19zdGFyIGZyb20gXCJAYWxnb2xpYS9jbGllbnQtYWJ0ZXN0aW5nXCI7XG5pbXBvcnQgKiBhcyBjbGllbnRfYW5hbHl0aWNzX3N0YXIgZnJvbSBcIkBhbGdvbGlhL2NsaWVudC1hbmFseXRpY3NcIjtcbmltcG9ydCAqIGFzIGNsaWVudF9pbnNpZ2h0c19zdGFyIGZyb20gXCJAYWxnb2xpYS9jbGllbnQtaW5zaWdodHNcIjtcbmltcG9ydCAqIGFzIGNsaWVudF9wZXJzb25hbGl6YXRpb25fc3RhciBmcm9tIFwiQGFsZ29saWEvY2xpZW50LXBlcnNvbmFsaXphdGlvblwiO1xuaW1wb3J0ICogYXMgY2xpZW50X3F1ZXJ5X3N1Z2dlc3Rpb25zX3N0YXIgZnJvbSBcIkBhbGdvbGlhL2NsaWVudC1xdWVyeS1zdWdnZXN0aW9uc1wiO1xuaW1wb3J0ICogYXMgY2xpZW50X3NlYXJjaF9zdGFyIGZyb20gXCJAYWxnb2xpYS9jbGllbnQtc2VhcmNoXCI7XG5pbXBvcnQgKiBhcyBpbmdlc3Rpb25fc3RhciBmcm9tIFwiQGFsZ29saWEvaW5nZXN0aW9uXCI7XG5pbXBvcnQgKiBhcyBtb25pdG9yaW5nX3N0YXIgZnJvbSBcIkBhbGdvbGlhL21vbml0b3JpbmdcIjtcbmltcG9ydCAqIGFzIHJlY29tbWVuZF9zdGFyIGZyb20gXCJAYWxnb2xpYS9yZWNvbW1lbmRcIjtcblxuLy8gYnVpbGRzL25vZGUudHNcbl9fcmVFeHBvcnQobm9kZV9leHBvcnRzLCBtb2RlbHNfZXhwb3J0cyk7XG5mdW5jdGlvbiBhbGdvbGlhc2VhcmNoKGFwcElkLCBhcGlLZXksIG9wdGlvbnMpIHtcbiAgaWYgKCFhcHBJZCB8fCB0eXBlb2YgYXBwSWQgIT09IFwic3RyaW5nXCIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJgYXBwSWRgIGlzIG1pc3NpbmcuXCIpO1xuICB9XG4gIGlmICghYXBpS2V5IHx8IHR5cGVvZiBhcGlLZXkgIT09IFwic3RyaW5nXCIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJgYXBpS2V5YCBpcyBtaXNzaW5nLlwiKTtcbiAgfVxuICBjb25zdCBjbGllbnQgPSBzZWFyY2hDbGllbnQoYXBwSWQsIGFwaUtleSwgb3B0aW9ucyk7XG4gIGxldCBpbmdlc3Rpb25UcmFuc3BvcnRlcjtcbiAgaWYgKG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMudHJhbnNmb3JtYXRpb24pIHtcbiAgICBpZiAoIW9wdGlvbnMudHJhbnNmb3JtYXRpb24ucmVnaW9uKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJgcmVnaW9uYCBtdXN0IGJlIHByb3ZpZGVkIHdoZW4gbGV2ZXJhZ2luZyB0aGUgdHJhbnNmb3JtYXRpb24gcGlwZWxpbmVcIik7XG4gICAgfVxuICAgIGluZ2VzdGlvblRyYW5zcG9ydGVyID0gaW5nZXN0aW9uQ2xpZW50KGFwcElkLCBhcGlLZXksIG9wdGlvbnMudHJhbnNmb3JtYXRpb24ucmVnaW9uLCBvcHRpb25zKTtcbiAgfVxuICByZXR1cm4ge1xuICAgIC4uLmNsaWVudCxcbiAgICBhc3luYyBzYXZlT2JqZWN0c1dpdGhUcmFuc2Zvcm1hdGlvbih7IGluZGV4TmFtZSwgb2JqZWN0cywgd2FpdEZvclRhc2tzIH0sIHJlcXVlc3RPcHRpb25zKSB7XG4gICAgICB2YXIgX2E7XG4gICAgICBpZiAoIWluZ2VzdGlvblRyYW5zcG9ydGVyKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcImB0cmFuc2Zvcm1hdGlvbi5yZWdpb25gIG11c3QgYmUgcHJvdmlkZWQgYXQgY2xpZW50IGluc3RhbnRpYXRpb24gYmVmb3JlIGNhbGxpbmcgdGhpcyBtZXRob2QuXCIpO1xuICAgICAgfVxuICAgICAgaWYgKCEoKF9hID0gb3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy50cmFuc2Zvcm1hdGlvbikgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLnJlZ2lvbikpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiYHJlZ2lvbmAgbXVzdCBiZSBwcm92aWRlZCB3aGVuIGxldmVyYWdpbmcgdGhlIHRyYW5zZm9ybWF0aW9uIHBpcGVsaW5lXCIpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGluZ2VzdGlvblRyYW5zcG9ydGVyID09IG51bGwgPyB2b2lkIDAgOiBpbmdlc3Rpb25UcmFuc3BvcnRlci5wdXNoKFxuICAgICAgICB7XG4gICAgICAgICAgaW5kZXhOYW1lLFxuICAgICAgICAgIHdhdGNoOiB3YWl0Rm9yVGFza3MsXG4gICAgICAgICAgcHVzaFRhc2tQYXlsb2FkOiB7XG4gICAgICAgICAgICBhY3Rpb246IFwiYWRkT2JqZWN0XCIsXG4gICAgICAgICAgICByZWNvcmRzOiBvYmplY3RzXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICByZXF1ZXN0T3B0aW9uc1xuICAgICAgKTtcbiAgICB9LFxuICAgIGFzeW5jIHBhcnRpYWxVcGRhdGVPYmplY3RzV2l0aFRyYW5zZm9ybWF0aW9uKHsgaW5kZXhOYW1lLCBvYmplY3RzLCBjcmVhdGVJZk5vdEV4aXN0cywgd2FpdEZvclRhc2tzIH0sIHJlcXVlc3RPcHRpb25zKSB7XG4gICAgICB2YXIgX2E7XG4gICAgICBpZiAoIWluZ2VzdGlvblRyYW5zcG9ydGVyKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcImB0cmFuc2Zvcm1hdGlvbi5yZWdpb25gIG11c3QgYmUgcHJvdmlkZWQgYXQgY2xpZW50IGluc3RhbnRpYXRpb24gYmVmb3JlIGNhbGxpbmcgdGhpcyBtZXRob2QuXCIpO1xuICAgICAgfVxuICAgICAgaWYgKCEoKF9hID0gb3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy50cmFuc2Zvcm1hdGlvbikgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLnJlZ2lvbikpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiYHJlZ2lvbmAgbXVzdCBiZSBwcm92aWRlZCB3aGVuIGxldmVyYWdpbmcgdGhlIHRyYW5zZm9ybWF0aW9uIHBpcGVsaW5lXCIpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGluZ2VzdGlvblRyYW5zcG9ydGVyID09IG51bGwgPyB2b2lkIDAgOiBpbmdlc3Rpb25UcmFuc3BvcnRlci5wdXNoKFxuICAgICAgICB7XG4gICAgICAgICAgaW5kZXhOYW1lLFxuICAgICAgICAgIHdhdGNoOiB3YWl0Rm9yVGFza3MsXG4gICAgICAgICAgcHVzaFRhc2tQYXlsb2FkOiB7XG4gICAgICAgICAgICBhY3Rpb246IGNyZWF0ZUlmTm90RXhpc3RzID8gXCJwYXJ0aWFsVXBkYXRlT2JqZWN0XCIgOiBcInBhcnRpYWxVcGRhdGVPYmplY3ROb0NyZWF0ZVwiLFxuICAgICAgICAgICAgcmVjb3Jkczogb2JqZWN0c1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgcmVxdWVzdE9wdGlvbnNcbiAgICAgICk7XG4gICAgfSxcbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIHZhbHVlIG9mIHRoZSBgYWxnb2xpYUFnZW50YCwgdXNlZCBieSBvdXIgbGlicmFyaWVzIGludGVybmFsbHkgYW5kIHRlbGVtZXRyeSBzeXN0ZW0uXG4gICAgICovXG4gICAgZ2V0IF91YSgpIHtcbiAgICAgIHJldHVybiBjbGllbnQudHJhbnNwb3J0ZXIuYWxnb2xpYUFnZW50LnZhbHVlO1xuICAgIH0sXG4gICAgaW5pdEFidGVzdGluZzogKGluaXRPcHRpb25zKSA9PiB7XG4gICAgICByZXR1cm4gYWJ0ZXN0aW5nQ2xpZW50KFxuICAgICAgICBpbml0T3B0aW9ucy5hcHBJZCB8fCBhcHBJZCxcbiAgICAgICAgaW5pdE9wdGlvbnMuYXBpS2V5IHx8IGFwaUtleSxcbiAgICAgICAgaW5pdE9wdGlvbnMucmVnaW9uLFxuICAgICAgICBpbml0T3B0aW9ucy5vcHRpb25zXG4gICAgICApO1xuICAgIH0sXG4gICAgaW5pdEFuYWx5dGljczogKGluaXRPcHRpb25zKSA9PiB7XG4gICAgICByZXR1cm4gYW5hbHl0aWNzQ2xpZW50KFxuICAgICAgICBpbml0T3B0aW9ucy5hcHBJZCB8fCBhcHBJZCxcbiAgICAgICAgaW5pdE9wdGlvbnMuYXBpS2V5IHx8IGFwaUtleSxcbiAgICAgICAgaW5pdE9wdGlvbnMucmVnaW9uLFxuICAgICAgICBpbml0T3B0aW9ucy5vcHRpb25zXG4gICAgICApO1xuICAgIH0sXG4gICAgaW5pdEluZ2VzdGlvbjogKGluaXRPcHRpb25zKSA9PiB7XG4gICAgICByZXR1cm4gaW5nZXN0aW9uQ2xpZW50KFxuICAgICAgICBpbml0T3B0aW9ucy5hcHBJZCB8fCBhcHBJZCxcbiAgICAgICAgaW5pdE9wdGlvbnMuYXBpS2V5IHx8IGFwaUtleSxcbiAgICAgICAgaW5pdE9wdGlvbnMucmVnaW9uLFxuICAgICAgICBpbml0T3B0aW9ucy5vcHRpb25zXG4gICAgICApO1xuICAgIH0sXG4gICAgaW5pdEluc2lnaHRzOiAoaW5pdE9wdGlvbnMpID0+IHtcbiAgICAgIHJldHVybiBpbnNpZ2h0c0NsaWVudChcbiAgICAgICAgaW5pdE9wdGlvbnMuYXBwSWQgfHwgYXBwSWQsXG4gICAgICAgIGluaXRPcHRpb25zLmFwaUtleSB8fCBhcGlLZXksXG4gICAgICAgIGluaXRPcHRpb25zLnJlZ2lvbixcbiAgICAgICAgaW5pdE9wdGlvbnMub3B0aW9uc1xuICAgICAgKTtcbiAgICB9LFxuICAgIGluaXRNb25pdG9yaW5nOiAoaW5pdE9wdGlvbnMgPSB7fSkgPT4ge1xuICAgICAgcmV0dXJuIG1vbml0b3JpbmdDbGllbnQoaW5pdE9wdGlvbnMuYXBwSWQgfHwgYXBwSWQsIGluaXRPcHRpb25zLmFwaUtleSB8fCBhcGlLZXksIGluaXRPcHRpb25zLm9wdGlvbnMpO1xuICAgIH0sXG4gICAgaW5pdFBlcnNvbmFsaXphdGlvbjogKGluaXRPcHRpb25zKSA9PiB7XG4gICAgICByZXR1cm4gcGVyc29uYWxpemF0aW9uQ2xpZW50KFxuICAgICAgICBpbml0T3B0aW9ucy5hcHBJZCB8fCBhcHBJZCxcbiAgICAgICAgaW5pdE9wdGlvbnMuYXBpS2V5IHx8IGFwaUtleSxcbiAgICAgICAgaW5pdE9wdGlvbnMucmVnaW9uLFxuICAgICAgICBpbml0T3B0aW9ucy5vcHRpb25zXG4gICAgICApO1xuICAgIH0sXG4gICAgaW5pdFF1ZXJ5U3VnZ2VzdGlvbnM6IChpbml0T3B0aW9ucykgPT4ge1xuICAgICAgcmV0dXJuIHF1ZXJ5U3VnZ2VzdGlvbnNDbGllbnQoXG4gICAgICAgIGluaXRPcHRpb25zLmFwcElkIHx8IGFwcElkLFxuICAgICAgICBpbml0T3B0aW9ucy5hcGlLZXkgfHwgYXBpS2V5LFxuICAgICAgICBpbml0T3B0aW9ucy5yZWdpb24sXG4gICAgICAgIGluaXRPcHRpb25zLm9wdGlvbnNcbiAgICAgICk7XG4gICAgfSxcbiAgICBpbml0UmVjb21tZW5kOiAoaW5pdE9wdGlvbnMgPSB7fSkgPT4ge1xuICAgICAgcmV0dXJuIHJlY29tbWVuZENsaWVudChpbml0T3B0aW9ucy5hcHBJZCB8fCBhcHBJZCwgaW5pdE9wdGlvbnMuYXBpS2V5IHx8IGFwaUtleSwgaW5pdE9wdGlvbnMub3B0aW9ucyk7XG4gICAgfVxuICB9O1xufVxuZXhwb3J0IHtcbiAgYWxnb2xpYXNlYXJjaCxcbiAgYXBpQ2xpZW50VmVyc2lvblxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5vZGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/algoliasearch/dist/node.js\n");

/***/ })

};
;